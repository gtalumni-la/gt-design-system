name: Deploy Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build design tokens
        run: pnpm --filter @gtalumni-la/tokens build

      - name: Build React components
        run: pnpm --filter @gtalumni-la/react build

      - name: Build Storybook
        run: pnpm --filter @gtalumni-la/storybook build

      - name: Build VitePress documentation
        run: pnpm --filter @gtalumni-la/docs build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare deployment directory
        run: |
          mkdir -p dist
          # Copy VitePress build (main site)
          cp -r apps/docs/.vitepress/dist/* dist/
          # Copy Storybook to /storybook subdirectory
          mkdir -p dist/storybook
          cp -r apps/storybook/storybook-static/* dist/storybook/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  # Deployment job (only on main branch)
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
