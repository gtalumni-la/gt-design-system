import{_ as a,c as i,o as n,ag as s}from"./chunks/framework.CPSlWV_k.js";const h=JSON.parse('{"title":"Accessibility Testing Checklist","description":"","frontmatter":{},"headers":[],"relativePath":"development/accessibility-testing-checklist.md","filePath":"development/accessibility-testing-checklist.md","lastUpdated":1757516078000}'),t={name:"development/accessibility-testing-checklist.md"};function l(r,e,o,c,d,p){return n(),i("div",null,e[0]||(e[0]=[s(`<h1 id="accessibility-testing-checklist" tabindex="-1">Accessibility Testing Checklist <a class="header-anchor" href="#accessibility-testing-checklist" aria-label="Permalink to &quot;Accessibility Testing Checklist&quot;">​</a></h1><p>This comprehensive checklist helps ensure components meet WCAG 2.1 AA standards through manual testing. Use this alongside automated testing tools.</p><h2 id="pre-testing-setup" tabindex="-1">Pre-Testing Setup <a class="header-anchor" href="#pre-testing-setup" aria-label="Permalink to &quot;Pre-Testing Setup&quot;">​</a></h2><h3 id="required-tools" tabindex="-1">Required Tools <a class="header-anchor" href="#required-tools" aria-label="Permalink to &quot;Required Tools&quot;">​</a></h3><ul><li>[ ] Modern browser (Chrome, Firefox, Safari, Edge)</li><li>[ ] Screen reader software (NVDA, JAWS, VoiceOver, TalkBack)</li><li>[ ] Keyboard for navigation testing</li><li>[ ] Color contrast analyzer tool</li><li>[ ] Browser developer tools</li></ul><h3 id="testing-environment" tabindex="-1">Testing Environment <a class="header-anchor" href="#testing-environment" aria-label="Permalink to &quot;Testing Environment&quot;">​</a></h3><ul><li>[ ] Test in multiple browsers</li><li>[ ] Test at different zoom levels (100%, 200%, 400%)</li><li>[ ] Test with reduced motion preferences</li><li>[ ] Test with high contrast mode enabled</li><li>[ ] Test in both light and dark themes (if applicable)</li></ul><h2 id="component-testing-checklist" tabindex="-1">Component Testing Checklist <a class="header-anchor" href="#component-testing-checklist" aria-label="Permalink to &quot;Component Testing Checklist&quot;">​</a></h2><h3 id="visual-and-structural-testing" tabindex="-1">Visual and Structural Testing <a class="header-anchor" href="#visual-and-structural-testing" aria-label="Permalink to &quot;Visual and Structural Testing&quot;">​</a></h3><h4 id="color-and-contrast" tabindex="-1">Color and Contrast <a class="header-anchor" href="#color-and-contrast" aria-label="Permalink to &quot;Color and Contrast&quot;">​</a></h4><ul><li>[ ] Text has sufficient contrast against background (4.5:1 for normal, 3:1 for large)</li><li>[ ] Interactive elements maintain contrast in all states (hover, focus, active)</li><li>[ ] Information is not conveyed through color alone</li><li>[ ] Color blind users can distinguish between different states/types</li><li>[ ] Custom focus indicators have sufficient contrast</li></ul><h4 id="typography-and-layout" tabindex="-1">Typography and Layout <a class="header-anchor" href="#typography-and-layout" aria-label="Permalink to &quot;Typography and Layout&quot;">​</a></h4><ul><li>[ ] Text remains readable at 200% zoom without horizontal scrolling</li><li>[ ] Line height and spacing are adequate for readability</li><li>[ ] Text doesn&#39;t get cut off or overlap at high zoom levels</li><li>[ ] Content reflows properly at different viewport sizes</li><li>[ ] No horizontal scrolling required at 320px width</li></ul><h4 id="visual-indicators" tabindex="-1">Visual Indicators <a class="header-anchor" href="#visual-indicators" aria-label="Permalink to &quot;Visual Indicators&quot;">​</a></h4><ul><li>[ ] Focus indicators are clearly visible and don&#39;t get cut off</li><li>[ ] Loading states are visually apparent</li><li>[ ] Error states are clearly indicated</li><li>[ ] Required fields are visually marked</li><li>[ ] State changes (expanded/collapsed, selected/unselected) are clear</li></ul><h3 id="keyboard-navigation-testing" tabindex="-1">Keyboard Navigation Testing <a class="header-anchor" href="#keyboard-navigation-testing" aria-label="Permalink to &quot;Keyboard Navigation Testing&quot;">​</a></h3><h4 id="basic-navigation" tabindex="-1">Basic Navigation <a class="header-anchor" href="#basic-navigation" aria-label="Permalink to &quot;Basic Navigation&quot;">​</a></h4><ul><li>[ ] All interactive elements are reachable via Tab key</li><li>[ ] Tab order follows logical reading order (left-to-right, top-to-bottom)</li><li>[ ] Shift+Tab moves backward through elements correctly</li><li>[ ] No keyboard traps (focus gets stuck)</li><li>[ ] Skip links work and are visible when focused</li></ul><h4 id="interaction-testing" tabindex="-1">Interaction Testing <a class="header-anchor" href="#interaction-testing" aria-label="Permalink to &quot;Interaction Testing&quot;">​</a></h4><ul><li>[ ] Enter key activates buttons and links</li><li>[ ] Space bar activates buttons and checkboxes</li><li>[ ] Arrow keys navigate within component groups (tabs, menus, lists)</li><li>[ ] Escape key closes modals, dropdowns, and menus</li><li>[ ] All mouse interactions have keyboard equivalents</li></ul><h4 id="focus-management" tabindex="-1">Focus Management <a class="header-anchor" href="#focus-management" aria-label="Permalink to &quot;Focus Management&quot;">​</a></h4><ul><li>[ ] Focus moves logically when content changes</li><li>[ ] Focus returns to trigger element when modals close</li><li>[ ] Focus doesn&#39;t get lost when content updates</li><li>[ ] Focus is trapped within modals appropriately</li><li>[ ] Initial focus placement is logical in dynamic content</li></ul><h3 id="screen-reader-testing" tabindex="-1">Screen Reader Testing <a class="header-anchor" href="#screen-reader-testing" aria-label="Permalink to &quot;Screen Reader Testing&quot;">​</a></h3><h4 id="content-structure" tabindex="-1">Content Structure <a class="header-anchor" href="#content-structure" aria-label="Permalink to &quot;Content Structure&quot;">​</a></h4><ul><li>[ ] Heading hierarchy is logical (h1 → h2 → h3, no skipping levels)</li><li>[ ] Lists are properly marked up with ul/ol and li elements</li><li>[ ] Tables have proper headers and captions</li><li>[ ] Form labels are properly associated with inputs</li><li>[ ] Landmarks (main, nav, aside, etc.) are used appropriately</li></ul><h4 id="aria-implementation" tabindex="-1">ARIA Implementation <a class="header-anchor" href="#aria-implementation" aria-label="Permalink to &quot;ARIA Implementation&quot;">​</a></h4><ul><li>[ ] ARIA labels provide clear, concise descriptions</li><li>[ ] ARIA descriptions add helpful context without being redundant</li><li>[ ] Live regions announce important changes</li><li>[ ] ARIA states (expanded, selected, checked) are accurate</li><li>[ ] Custom components have appropriate ARIA roles</li></ul><h4 id="screen-reader-specific-tests" tabindex="-1">Screen Reader Specific Tests <a class="header-anchor" href="#screen-reader-specific-tests" aria-label="Permalink to &quot;Screen Reader Specific Tests&quot;">​</a></h4><p><strong>NVDA/JAWS (Windows):</strong></p><ul><li>[ ] Navigate by headings (H key)</li><li>[ ] Navigate by landmarks (D key)</li><li>[ ] Navigate by links (K key)</li><li>[ ] Navigate by form elements (F key)</li><li>[ ] Browse mode vs forms mode transitions work correctly</li></ul><p><strong>VoiceOver (macOS/iOS):</strong></p><ul><li>[ ] Rotor navigation works for all content types</li><li>[ ] Gestures work on touch devices</li><li>[ ] Voice commands function properly</li><li>[ ] Announcements are clear and helpful</li></ul><p><strong>TalkBack (Android):</strong></p><ul><li>[ ] Explore by touch works correctly</li><li>[ ] Linear navigation is logical</li><li>[ ] Gestures are responsive</li><li>[ ] Reading controls function properly</li></ul><h3 id="interactive-component-testing" tabindex="-1">Interactive Component Testing <a class="header-anchor" href="#interactive-component-testing" aria-label="Permalink to &quot;Interactive Component Testing&quot;">​</a></h3><h4 id="forms" tabindex="-1">Forms <a class="header-anchor" href="#forms" aria-label="Permalink to &quot;Forms&quot;">​</a></h4><ul><li>[ ] All form elements have associated labels</li><li>[ ] Required fields are clearly marked and announced</li><li>[ ] Error messages are announced and associated with fields</li><li>[ ] Fieldsets group related inputs with descriptive legends</li><li>[ ] Form submission feedback is announced</li><li>[ ] Auto-complete suggestions are accessible</li></ul><h4 id="buttons-and-links" tabindex="-1">Buttons and Links <a class="header-anchor" href="#buttons-and-links" aria-label="Permalink to &quot;Buttons and Links&quot;">​</a></h4><ul><li>[ ] Button vs link semantics are used correctly</li><li>[ ] Disabled buttons are properly conveyed to assistive technology</li><li>[ ] Loading buttons announce their state</li><li>[ ] Icon buttons have descriptive labels</li><li>[ ] Link purposes are clear from context or aria-label</li></ul><h4 id="interactive-lists-and-menus" tabindex="-1">Interactive Lists and Menus <a class="header-anchor" href="#interactive-lists-and-menus" aria-label="Permalink to &quot;Interactive Lists and Menus&quot;">​</a></h4><ul><li>[ ] Menu items are properly announced</li><li>[ ] Submenu relationships are clear</li><li>[ ] Current/selected items are announced</li><li>[ ] List navigation shortcuts work (first letter, arrows)</li><li>[ ] Menu state changes are announced</li></ul><h4 id="modals-and-overlays" tabindex="-1">Modals and Overlays <a class="header-anchor" href="#modals-and-overlays" aria-label="Permalink to &quot;Modals and Overlays&quot;">​</a></h4><ul><li>[ ] Focus moves to modal when opened</li><li>[ ] Background content is inert (not focusable)</li><li>[ ] Modal title is announced</li><li>[ ] Escape key closes modal</li><li>[ ] Focus returns to trigger element on close</li></ul><h4 id="dynamic-content" tabindex="-1">Dynamic Content <a class="header-anchor" href="#dynamic-content" aria-label="Permalink to &quot;Dynamic Content&quot;">​</a></h4><ul><li>[ ] Content changes are announced appropriately</li><li>[ ] Live regions use correct politeness levels</li><li>[ ] Loading states are announced</li><li>[ ] Error states are announced immediately</li><li>[ ] Success messages are announced</li></ul><h3 id="mobile-accessibility-testing" tabindex="-1">Mobile Accessibility Testing <a class="header-anchor" href="#mobile-accessibility-testing" aria-label="Permalink to &quot;Mobile Accessibility Testing&quot;">​</a></h3><h4 id="touch-targets" tabindex="-1">Touch Targets <a class="header-anchor" href="#touch-targets" aria-label="Permalink to &quot;Touch Targets&quot;">​</a></h4><ul><li>[ ] Interactive elements are at least 44×44px (iOS) or 48×48dp (Android)</li><li>[ ] Adequate spacing between touch targets (8px minimum)</li><li>[ ] Touch targets don&#39;t overlap</li><li>[ ] Swipe gestures have alternatives</li></ul><h4 id="mobile-screen-readers" tabindex="-1">Mobile Screen Readers <a class="header-anchor" href="#mobile-screen-readers" aria-label="Permalink to &quot;Mobile Screen Readers&quot;">​</a></h4><ul><li>[ ] VoiceOver gestures work correctly (iOS)</li><li>[ ] TalkBack gestures work correctly (Android)</li><li>[ ] Explore by touch provides accurate information</li><li>[ ] Reading order makes sense with gestures</li></ul><h4 id="device-orientation" tabindex="-1">Device Orientation <a class="header-anchor" href="#device-orientation" aria-label="Permalink to &quot;Device Orientation&quot;">​</a></h4><ul><li>[ ] Content works in both portrait and landscape</li><li>[ ] No information is lost when rotating device</li><li>[ ] Touch targets remain appropriately sized</li></ul><h3 id="performance-and-motion-testing" tabindex="-1">Performance and Motion Testing <a class="header-anchor" href="#performance-and-motion-testing" aria-label="Permalink to &quot;Performance and Motion Testing&quot;">​</a></h3><h4 id="reduced-motion" tabindex="-1">Reduced Motion <a class="header-anchor" href="#reduced-motion" aria-label="Permalink to &quot;Reduced Motion&quot;">​</a></h4><ul><li>[ ] Respects prefers-reduced-motion settings</li><li>[ ] Essential animations can be disabled</li><li>[ ] Auto-playing content can be paused</li><li>[ ] Parallax effects are disabled when requested</li></ul><h4 id="performance-impact" tabindex="-1">Performance Impact <a class="header-anchor" href="#performance-impact" aria-label="Permalink to &quot;Performance Impact&quot;">​</a></h4><ul><li>[ ] Page remains responsive during animations</li><li>[ ] Screen reader performance isn&#39;t degraded</li><li>[ ] Keyboard navigation remains smooth</li></ul><h2 id="component-specific-checklists" tabindex="-1">Component-Specific Checklists <a class="header-anchor" href="#component-specific-checklists" aria-label="Permalink to &quot;Component-Specific Checklists&quot;">​</a></h2><h3 id="button-component" tabindex="-1">Button Component <a class="header-anchor" href="#button-component" aria-label="Permalink to &quot;Button Component&quot;">​</a></h3><ul><li>[ ] Uses semantic <code>&lt;button&gt;</code> element</li><li>[ ] Has descriptive accessible name</li><li>[ ] Disabled state is properly conveyed</li><li>[ ] Loading state is announced</li><li>[ ] Icon buttons have text alternatives</li><li>[ ] Toggle buttons announce pressed state</li></ul><h3 id="form-components" tabindex="-1">Form Components <a class="header-anchor" href="#form-components" aria-label="Permalink to &quot;Form Components&quot;">​</a></h3><ul><li>[ ] Labels are properly associated</li><li>[ ] Error messages are linked to inputs</li><li>[ ] Required fields are marked</li><li>[ ] Help text is associated with inputs</li><li>[ ] Validation happens at appropriate times</li><li>[ ] Success states are announced</li></ul><h3 id="navigation-components" tabindex="-1">Navigation Components <a class="header-anchor" href="#navigation-components" aria-label="Permalink to &quot;Navigation Components&quot;">​</a></h3><ul><li>[ ] Current page is identified</li><li>[ ] Breadcrumbs show hierarchy</li><li>[ ] Skip links are available</li><li>[ ] Menu states are announced</li><li>[ ] Keyboard shortcuts are available</li></ul><h3 id="data-display-components" tabindex="-1">Data Display Components <a class="header-anchor" href="#data-display-components" aria-label="Permalink to &quot;Data Display Components&quot;">​</a></h3><ul><li>[ ] Tables have proper headers</li><li>[ ] Complex data has text alternatives</li><li>[ ] Charts have accessible descriptions</li><li>[ ] Data relationships are clear</li><li>[ ] Sort states are announced</li></ul><h2 id="testing-documentation" tabindex="-1">Testing Documentation <a class="header-anchor" href="#testing-documentation" aria-label="Permalink to &quot;Testing Documentation&quot;">​</a></h2><h3 id="test-results-recording" tabindex="-1">Test Results Recording <a class="header-anchor" href="#test-results-recording" aria-label="Permalink to &quot;Test Results Recording&quot;">​</a></h3><p>For each component test, document:</p><h4 id="basic-information" tabindex="-1">Basic Information <a class="header-anchor" href="#basic-information" aria-label="Permalink to &quot;Basic Information&quot;">​</a></h4><ul><li>[ ] Component name and version</li><li>[ ] Testing date and tester name</li><li>[ ] Browsers and assistive technologies tested</li><li>[ ] Testing environment details</li></ul><h4 id="results-summary" tabindex="-1">Results Summary <a class="header-anchor" href="#results-summary" aria-label="Permalink to &quot;Results Summary&quot;">​</a></h4><ul><li>[ ] Overall accessibility compliance level</li><li>[ ] Critical issues found</li><li>[ ] Recommended improvements</li><li>[ ] Retesting requirements</li></ul><h4 id="detailed-findings" tabindex="-1">Detailed Findings <a class="header-anchor" href="#detailed-findings" aria-label="Permalink to &quot;Detailed Findings&quot;">​</a></h4><ul><li>[ ] Specific WCAG success criteria failed</li><li>[ ] Steps to reproduce issues</li><li>[ ] Screenshots or recordings of problems</li><li>[ ] Suggested remediation approaches</li></ul><h3 id="issue-reporting-template" tabindex="-1">Issue Reporting Template <a class="header-anchor" href="#issue-reporting-template" aria-label="Permalink to &quot;Issue Reporting Template&quot;">​</a></h3><div class="language-markdown line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#79B8FF;font-weight:bold;">## Accessibility Issue Report</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;font-weight:bold;">**Component:**</span><span style="color:#E1E4E8;"> [Component Name]</span></span>
<span class="line"><span style="color:#E1E4E8;font-weight:bold;">**Severity:**</span><span style="color:#E1E4E8;"> [</span><span style="color:#DBEDFF;text-decoration:underline;">Critical/High/Medium/Low</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;font-weight:bold;">**WCAG Criteria:**</span><span style="color:#E1E4E8;"> [e.g., 2.1.1 Keyboard]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;font-weight:bold;">### Description</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[Clear description of the accessibility issue]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;font-weight:bold;">### Steps to Reproduce</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">1.</span><span style="color:#E1E4E8;"> [Step one]</span></span>
<span class="line"><span style="color:#FFAB70;">2.</span><span style="color:#E1E4E8;"> [Step two]</span></span>
<span class="line"><span style="color:#FFAB70;">3.</span><span style="color:#E1E4E8;"> [Step three]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;font-weight:bold;">### Expected Behavior</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[What should happen]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;font-weight:bold;">### Actual Behavior</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[What actually happens]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;font-weight:bold;">### Assistive Technology</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">-</span><span style="color:#E1E4E8;font-weight:bold;"> **Screen Reader:**</span><span style="color:#E1E4E8;"> [Name and version]</span></span>
<span class="line"><span style="color:#FFAB70;">-</span><span style="color:#E1E4E8;font-weight:bold;"> **Browser:**</span><span style="color:#E1E4E8;"> [Name and version]</span></span>
<span class="line"><span style="color:#FFAB70;">-</span><span style="color:#E1E4E8;font-weight:bold;"> **Operating System:**</span><span style="color:#E1E4E8;"> [Name and version]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;font-weight:bold;">### Screenshots/Videos</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[Attach any relevant media]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;font-weight:bold;">### Suggested Fix</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[Recommended solution if known]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h2 id="acceptance-criteria" tabindex="-1">Acceptance Criteria <a class="header-anchor" href="#acceptance-criteria" aria-label="Permalink to &quot;Acceptance Criteria&quot;">​</a></h2><h3 id="ready-for-release-checklist" tabindex="-1">Ready for Release Checklist <a class="header-anchor" href="#ready-for-release-checklist" aria-label="Permalink to &quot;Ready for Release Checklist&quot;">​</a></h3><p>A component is ready for release when:</p><ul><li>[ ] All automated accessibility tests pass</li><li>[ ] Manual testing checklist is 100% complete</li><li>[ ] No critical accessibility issues remain</li><li>[ ] Screen reader testing passes in at least 2 different screen readers</li><li>[ ] Keyboard navigation testing passes completely</li><li>[ ] Color contrast meets or exceeds WCAG AA standards</li><li>[ ] Documentation includes accessibility features and usage notes</li><li>[ ] Code review includes accessibility specialist approval</li></ul><h3 id="regression-testing" tabindex="-1">Regression Testing <a class="header-anchor" href="#regression-testing" aria-label="Permalink to &quot;Regression Testing&quot;">​</a></h3><p>When updating components:</p><ul><li>[ ] Re-run full accessibility test suite</li><li>[ ] Test with assistive technologies if functionality changed</li><li>[ ] Verify existing accessibility features still work</li><li>[ ] Update documentation for any accessibility changes</li><li>[ ] Consider impact on dependent components</li></ul><h2 id="resources-and-support" tabindex="-1">Resources and Support <a class="header-anchor" href="#resources-and-support" aria-label="Permalink to &quot;Resources and Support&quot;">​</a></h2><h3 id="quick-reference-links" tabindex="-1">Quick Reference Links <a class="header-anchor" href="#quick-reference-links" aria-label="Permalink to &quot;Quick Reference Links&quot;">​</a></h3><ul><li><a href="https://www.w3.org/WAI/WCAG21/quickref/" target="_blank" rel="noreferrer">WCAG 2.1 Quick Reference</a></li><li><a href="https://webaim.org/articles/screenreader_testing/" target="_blank" rel="noreferrer">WebAIM Screen Reader Testing Guide</a></li><li><a href="https://www.w3.org/TR/accname-1.1/" target="_blank" rel="noreferrer">Accessible Name Computation</a></li></ul><h3 id="getting-help" tabindex="-1">Getting Help <a class="header-anchor" href="#getting-help" aria-label="Permalink to &quot;Getting Help&quot;">​</a></h3><ul><li><strong>Accessibility Team:</strong> <a href="mailto:accessibility@gtalumni.org" target="_blank" rel="noreferrer">accessibility@gtalumni.org</a></li><li><strong>Design System Issues:</strong> <a href="https://github.com/gtalumni-la/gt-design-system/issues" target="_blank" rel="noreferrer">GitHub Issues</a></li><li><strong>Community Support:</strong> <a href="https://github.com/gtalumni-la/gt-design-system/discussions" target="_blank" rel="noreferrer">GitHub Discussions</a></li></ul><h3 id="training-resources" tabindex="-1">Training Resources <a class="header-anchor" href="#training-resources" aria-label="Permalink to &quot;Training Resources&quot;">​</a></h3><ul><li><a href="https://webaim.org/articles/screenreader_testing/" target="_blank" rel="noreferrer">Screen Reader Basics</a></li><li><a href="https://www.w3.org/WAI/ARIA/apg/patterns/" target="_blank" rel="noreferrer">Keyboard Navigation Patterns</a></li><li><a href="https://webaim.org/articles/contrast/" target="_blank" rel="noreferrer">Color Contrast Guidelines</a></li></ul><p>Remember: Accessibility testing is an ongoing process, not a one-time check. Regular testing ensures that components remain accessible as they evolve and new features are added.</p>`,92)]))}const m=a(t,[["render",l]]);export{h as __pageData,m as default};
